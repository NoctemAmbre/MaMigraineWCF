#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MigraineCSMiddleware.DAO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Migraine")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertT_MEDECIN(T_MEDECIN instance);
    partial void UpdateT_MEDECIN(T_MEDECIN instance);
    partial void DeleteT_MEDECIN(T_MEDECIN instance);
    partial void InsertT_ADRESSE(T_ADRESSE instance);
    partial void UpdateT_ADRESSE(T_ADRESSE instance);
    partial void DeleteT_ADRESSE(T_ADRESSE instance);
    partial void InsertT_COMPTE(T_COMPTE instance);
    partial void UpdateT_COMPTE(T_COMPTE instance);
    partial void DeleteT_COMPTE(T_COMPTE instance);
    partial void InsertT_HORAIRE(T_HORAIRE instance);
    partial void UpdateT_HORAIRE(T_HORAIRE instance);
    partial void DeleteT_HORAIRE(T_HORAIRE instance);
    partial void InsertT_PLAGEHORAIRE(T_PLAGEHORAIRE instance);
    partial void UpdateT_PLAGEHORAIRE(T_PLAGEHORAIRE instance);
    partial void DeleteT_PLAGEHORAIRE(T_PLAGEHORAIRE instance);
    partial void InsertT_PATIENT(T_PATIENT instance);
    partial void UpdateT_PATIENT(T_PATIENT instance);
    partial void DeleteT_PATIENT(T_PATIENT instance);
    partial void InsertT_MEDICAMENTS_MIGRAINE(T_MEDICAMENTS_MIGRAINE instance);
    partial void UpdateT_MEDICAMENTS_MIGRAINE(T_MEDICAMENTS_MIGRAINE instance);
    partial void DeleteT_MEDICAMENTS_MIGRAINE(T_MEDICAMENTS_MIGRAINE instance);
    partial void InsertT_FACTEURS_MIGRAINE(T_FACTEURS_MIGRAINE instance);
    partial void UpdateT_FACTEURS_MIGRAINE(T_FACTEURS_MIGRAINE instance);
    partial void DeleteT_FACTEURS_MIGRAINE(T_FACTEURS_MIGRAINE instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MigraineConnectionString2"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<T_MEDECIN> T_MEDECIN
		{
			get
			{
				return this.GetTable<T_MEDECIN>();
			}
		}
		
		public System.Data.Linq.Table<T_ADRESSE> T_ADRESSE
		{
			get
			{
				return this.GetTable<T_ADRESSE>();
			}
		}
		
		public System.Data.Linq.Table<T_COMPTE> T_COMPTE
		{
			get
			{
				return this.GetTable<T_COMPTE>();
			}
		}
		
		public System.Data.Linq.Table<T_HORAIRE> T_HORAIRE
		{
			get
			{
				return this.GetTable<T_HORAIRE>();
			}
		}
		
		public System.Data.Linq.Table<T_PLAGEHORAIRE> T_PLAGEHORAIRE
		{
			get
			{
				return this.GetTable<T_PLAGEHORAIRE>();
			}
		}
		
		public System.Data.Linq.Table<T_ORDONNANCE> T_ORDONNANCE
		{
			get
			{
				return this.GetTable<T_ORDONNANCE>();
			}
		}
		
		public System.Data.Linq.Table<T_MEDICAMENT> T_MEDICAMENT
		{
			get
			{
				return this.GetTable<T_MEDICAMENT>();
			}
		}
		
		public System.Data.Linq.Table<T_MEDECINPATIENT> T_MEDECINPATIENT
		{
			get
			{
				return this.GetTable<T_MEDECINPATIENT>();
			}
		}
		
		public System.Data.Linq.Table<T_PATIENT> T_PATIENT
		{
			get
			{
				return this.GetTable<T_PATIENT>();
			}
		}
		
		public System.Data.Linq.Table<T_MEDICAMENTS_MIGRAINE> T_MEDICAMENTS_MIGRAINE
		{
			get
			{
				return this.GetTable<T_MEDICAMENTS_MIGRAINE>();
			}
		}
		
		public System.Data.Linq.Table<T_FACTEURS_MIGRAINE> T_FACTEURS_MIGRAINE
		{
			get
			{
				return this.GetTable<T_FACTEURS_MIGRAINE>();
			}
		}
		
		public System.Data.Linq.Table<T_MIGRAINES_PATIENT> T_MIGRAINES_PATIENT
		{
			get
			{
				return this.GetTable<T_MIGRAINES_PATIENT>();
			}
		}
		
		public System.Data.Linq.Table<T_MIGRAINE> T_MIGRAINE
		{
			get
			{
				return this.GetTable<T_MIGRAINE>();
			}
		}
		
		public System.Data.Linq.Table<T_FACTEURS> T_FACTEURS
		{
			get
			{
				return this.GetTable<T_FACTEURS>();
			}
		}
		
		public System.Data.Linq.Table<T_FACTEUR> T_FACTEUR
		{
			get
			{
				return this.GetTable<T_FACTEUR>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AjoutTypeMedicament")]
		public int AjoutTypeMedicament([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ListPatient")]
		public ISingleResult<ListPatientResult> ListPatient()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<ListPatientResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AjoutCompte")]
		public int AjoutCompte([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Identifiant", DbType="VarChar(MAX)")] string identifiant, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MotDePass", DbType="VarChar(MAX)")] string motDePass, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nom", DbType="VarChar(MAX)")] string nom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Prenom", DbType="VarChar(MAX)")] string prenom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateCreation", DbType="VarChar(MAX)")] string dateCreation, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DerniereModif", DbType="VarChar(MAX)")] string derniereModif, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreePar", DbType="Int")] System.Nullable<int> creePar, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdressMail", DbType="VarChar(MAX)")] string adressMail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="VarChar(MAX)")] string token)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), identifiant, motDePass, nom, prenom, dateCreation, derniereModif, creePar, adressMail, token);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AjoutMedecin")]
		public int AjoutMedecin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Identifiant", DbType="VarChar(MAX)")] string identifiant, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MotDePass", DbType="VarChar(MAX)")] string motDePass, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nom", DbType="VarChar(MAX)")] string nom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Prenom", DbType="VarChar(MAX)")] string prenom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateCreation", DbType="VarChar(MAX)")] string dateCreation, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DerniereModif", DbType="VarChar(MAX)")] string derniereModif, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreePar", DbType="Int")] System.Nullable<int> creePar, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdressMail", DbType="VarChar(MAX)")] string adressMail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="VarChar(MAX)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TelephoneCabinet", DbType="NText")] string telephoneCabinet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InfoComplementaire", DbType="NText")] string infoComplementaire)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), identifiant, motDePass, nom, prenom, dateCreation, derniereModif, creePar, adressMail, token, telephoneCabinet, infoComplementaire);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ModifCompte")]
		public int ModifCompte([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Identifiant", DbType="VarChar(MAX)")] string identifiant, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MotDePass", DbType="VarChar(MAX)")] string motDePass, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nom", DbType="VarChar(MAX)")] string nom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Prenom", DbType="VarChar(MAX)")] string prenom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateCreation", DbType="VarChar(MAX)")] string dateCreation, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DerniereModif", DbType="VarChar(MAX)")] string derniereModif, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreePar", DbType="Int")] System.Nullable<int> creePar, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdressMail", DbType="VarChar(MAX)")] string adressMail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="VarChar(MAX)")] string token)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, identifiant, motDePass, nom, prenom, dateCreation, derniereModif, creePar, adressMail, token);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ModifMedecin")]
		public int ModifMedecin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDCompte", DbType="Int")] System.Nullable<int> iDCompte, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nom", DbType="VarChar(MAX)")] string nom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Prenom", DbType="VarChar(MAX)")] string prenom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DerniereModif", DbType="VarChar(MAX)")] string derniereModif, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdressMail", DbType="VarChar(MAX)")] string adressMail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="VarChar(MAX)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDMedecin", DbType="Int")] System.Nullable<int> iDMedecin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TelephoneCabinet", DbType="NText")] string telephoneCabinet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InfoComplementaire", DbType="NText")] string infoComplementaire)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDCompte, nom, prenom, derniereModif, adressMail, token, iDMedecin, telephoneCabinet, infoComplementaire);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ModifCompteToken")]
		public int ModifCompteToken([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDCompte", DbType="Int")] System.Nullable<int> iDCompte, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="VarChar(MAX)")] string token)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDCompte, token);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AjoutHoraireOuvertureMedecin")]
		public int AjoutHoraireOuvertureMedecin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDMedecin", DbType="Int")] System.Nullable<int> iDMedecin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDjour", DbType="Int")] System.Nullable<int> iDjour, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HeureDebut", DbType="VarChar(MAX)")] string heureDebut, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HeureFin", DbType="VarChar(MAX)")] string heureFin)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDMedecin, iDjour, heureDebut, heureFin);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AjoutAdresse")]
		public int AjoutAdresse([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdCompte", DbType="Int")] System.Nullable<int> idCompte, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Numero", DbType="Int")] System.Nullable<int> numero, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NomRue", DbType="VarChar(MAX)")] string nomRue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodePostal", DbType="Int")] System.Nullable<int> codePostal, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ville", DbType="VarChar(MAX)")] string ville)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idCompte, numero, nomRue, codePostal, ville);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AjoutPatient")]
		public int AjoutPatient([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Identifiant", DbType="VarChar(MAX)")] string identifiant, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MotDePass", DbType="VarChar(MAX)")] string motDePass, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nom", DbType="VarChar(MAX)")] string nom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Prenom", DbType="VarChar(MAX)")] string prenom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateCreation", DbType="VarChar(MAX)")] string dateCreation, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DerniereModif", DbType="VarChar(MAX)")] string derniereModif, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreePar", DbType="Int")] System.Nullable<int> creePar, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdressMail", DbType="VarChar(MAX)")] string adressMail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="VarChar(MAX)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateNaissance", DbType="VarChar(MAX)")] string dateNaissance, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TelephonePortable", DbType="VarChar(MAX)")] string telephonePortable, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TelephoneFixe", DbType="VarChar(MAX)")] string telephoneFixe, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sexe", DbType="Bit")] System.Nullable<bool> sexe)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), identifiant, motDePass, nom, prenom, dateCreation, derniereModif, creePar, adressMail, token, dateNaissance, telephonePortable, telephoneFixe, sexe);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ModifPatient")]
		public int ModifPatient([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDCompte", DbType="Int")] System.Nullable<int> iDCompte, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nom", DbType="VarChar(MAX)")] string nom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Prenom", DbType="VarChar(MAX)")] string prenom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DerniereModif", DbType="VarChar(MAX)")] string derniereModif, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdressMail", DbType="VarChar(MAX)")] string adressMail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="VarChar(MAX)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDPatient", DbType="Int")] System.Nullable<int> iDPatient, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateNaissance", DbType="VarChar(MAX)")] string dateNaissance, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TelephonePortable", DbType="VarChar(MAX)")] string telephonePortable, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TelephoneFixe", DbType="VarChar(MAX)")] string telephoneFixe, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sexe", DbType="Bit")] System.Nullable<bool> sexe)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDCompte, nom, prenom, derniereModif, adressMail, token, iDPatient, dateNaissance, telephonePortable, telephoneFixe, sexe);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AjoutMedecinPatient")]
		public int AjoutMedecinPatient([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdMedecin", DbType="Int")] System.Nullable<int> idMedecin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdPatient", DbType="Int")] System.Nullable<int> idPatient)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idMedecin, idPatient);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AjoutMedicamentAPatient")]
		public int AjoutMedicamentAPatient([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDMedicament", DbType="Int")] System.Nullable<int> iDMedicament, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDPatient", DbType="Int")] System.Nullable<int> iDPatient, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quantite", DbType="Int")] System.Nullable<int> quantite)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDMedicament, iDPatient, quantite);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SupprMedicamentDuPatient")]
		public int SupprMedicamentDuPatient([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDMedicament", DbType="Int")] System.Nullable<int> iDMedicament, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDPatient", DbType="Int")] System.Nullable<int> iDPatient)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDMedicament, iDPatient);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SupprMedecinPatient")]
		public int SupprMedecinPatient([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdMedecin", DbType="Int")] System.Nullable<int> idMedecin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdPatient", DbType="Int")] System.Nullable<int> idPatient)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idMedecin, idPatient);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_MEDECIN")]
	public partial class T_MEDECIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TelephoneCabinet;
		
		private string _InfoComplementaire;
		
		private int _IdCompte;
		
		private EntitySet<T_COMPTE> _T_COMPTE;
		
		private EntityRef<T_HORAIRE> _T_HORAIRE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTelephoneCabinetChanging(string value);
    partial void OnTelephoneCabinetChanged();
    partial void OnInfoComplementaireChanging(string value);
    partial void OnInfoComplementaireChanged();
    partial void OnIdCompteChanging(int value);
    partial void OnIdCompteChanged();
    #endregion
		
		public T_MEDECIN()
		{
			this._T_COMPTE = new EntitySet<T_COMPTE>(new Action<T_COMPTE>(this.attach_T_COMPTE), new Action<T_COMPTE>(this.detach_T_COMPTE));
			this._T_HORAIRE = default(EntityRef<T_HORAIRE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._T_HORAIRE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneCabinet", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TelephoneCabinet
		{
			get
			{
				return this._TelephoneCabinet;
			}
			set
			{
				if ((this._TelephoneCabinet != value))
				{
					this.OnTelephoneCabinetChanging(value);
					this.SendPropertyChanging();
					this._TelephoneCabinet = value;
					this.SendPropertyChanged("TelephoneCabinet");
					this.OnTelephoneCabinetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoComplementaire", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string InfoComplementaire
		{
			get
			{
				return this._InfoComplementaire;
			}
			set
			{
				if ((this._InfoComplementaire != value))
				{
					this.OnInfoComplementaireChanging(value);
					this.SendPropertyChanging();
					this._InfoComplementaire = value;
					this.SendPropertyChanged("InfoComplementaire");
					this.OnInfoComplementaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCompte", DbType="Int NOT NULL")]
		public int IdCompte
		{
			get
			{
				return this._IdCompte;
			}
			set
			{
				if ((this._IdCompte != value))
				{
					this.OnIdCompteChanging(value);
					this.SendPropertyChanging();
					this._IdCompte = value;
					this.SendPropertyChanged("IdCompte");
					this.OnIdCompteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_MEDECIN_T_COMPTE", Storage="_T_COMPTE", ThisKey="IdCompte", OtherKey="ID")]
		public EntitySet<T_COMPTE> T_COMPTE
		{
			get
			{
				return this._T_COMPTE;
			}
			set
			{
				this._T_COMPTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_HORAIRE_T_MEDECIN", Storage="_T_HORAIRE", ThisKey="ID", OtherKey="IDMedecin", IsForeignKey=true)]
		public T_HORAIRE T_HORAIRE
		{
			get
			{
				return this._T_HORAIRE.Entity;
			}
			set
			{
				T_HORAIRE previousValue = this._T_HORAIRE.Entity;
				if (((previousValue != value) 
							|| (this._T_HORAIRE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_HORAIRE.Entity = null;
						previousValue.T_MEDECIN.Remove(this);
					}
					this._T_HORAIRE.Entity = value;
					if ((value != null))
					{
						value.T_MEDECIN.Add(this);
						this._ID = value.IDMedecin;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("T_HORAIRE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_COMPTE(T_COMPTE entity)
		{
			this.SendPropertyChanging();
			entity.T_MEDECIN = this;
		}
		
		private void detach_T_COMPTE(T_COMPTE entity)
		{
			this.SendPropertyChanging();
			entity.T_MEDECIN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_ADRESSE")]
	public partial class T_ADRESSE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IdCompte;
		
		private System.Nullable<int> _Numero;
		
		private string _NomRue;
		
		private System.Nullable<int> _CodePostal;
		
		private string _Ville;
		
		private EntitySet<T_COMPTE> _T_COMPTE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIdCompteChanging(int value);
    partial void OnIdCompteChanged();
    partial void OnNumeroChanging(System.Nullable<int> value);
    partial void OnNumeroChanged();
    partial void OnNomRueChanging(string value);
    partial void OnNomRueChanged();
    partial void OnCodePostalChanging(System.Nullable<int> value);
    partial void OnCodePostalChanged();
    partial void OnVilleChanging(string value);
    partial void OnVilleChanged();
    #endregion
		
		public T_ADRESSE()
		{
			this._T_COMPTE = new EntitySet<T_COMPTE>(new Action<T_COMPTE>(this.attach_T_COMPTE), new Action<T_COMPTE>(this.detach_T_COMPTE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCompte", DbType="Int NOT NULL")]
		public int IdCompte
		{
			get
			{
				return this._IdCompte;
			}
			set
			{
				if ((this._IdCompte != value))
				{
					this.OnIdCompteChanging(value);
					this.SendPropertyChanging();
					this._IdCompte = value;
					this.SendPropertyChanged("IdCompte");
					this.OnIdCompteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Int")]
		public System.Nullable<int> Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomRue", DbType="VarChar(MAX)")]
		public string NomRue
		{
			get
			{
				return this._NomRue;
			}
			set
			{
				if ((this._NomRue != value))
				{
					this.OnNomRueChanging(value);
					this.SendPropertyChanging();
					this._NomRue = value;
					this.SendPropertyChanged("NomRue");
					this.OnNomRueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodePostal", DbType="Int")]
		public System.Nullable<int> CodePostal
		{
			get
			{
				return this._CodePostal;
			}
			set
			{
				if ((this._CodePostal != value))
				{
					this.OnCodePostalChanging(value);
					this.SendPropertyChanging();
					this._CodePostal = value;
					this.SendPropertyChanged("CodePostal");
					this.OnCodePostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ville", DbType="VarChar(MAX)")]
		public string Ville
		{
			get
			{
				return this._Ville;
			}
			set
			{
				if ((this._Ville != value))
				{
					this.OnVilleChanging(value);
					this.SendPropertyChanging();
					this._Ville = value;
					this.SendPropertyChanged("Ville");
					this.OnVilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_ADRESSE_T_COMPTE", Storage="_T_COMPTE", ThisKey="IdCompte", OtherKey="ID")]
		public EntitySet<T_COMPTE> T_COMPTE
		{
			get
			{
				return this._T_COMPTE;
			}
			set
			{
				this._T_COMPTE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_COMPTE(T_COMPTE entity)
		{
			this.SendPropertyChanging();
			entity.T_ADRESSE = this;
		}
		
		private void detach_T_COMPTE(T_COMPTE entity)
		{
			this.SendPropertyChanging();
			entity.T_ADRESSE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_COMPTE")]
	public partial class T_COMPTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Identifiant;
		
		private string _MotDePass;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _DateCreation;
		
		private string _DerniereModif;
		
		private System.Nullable<int> _CreePar;
		
		private string _AdressMail;
		
		private string _Token;
		
		private EntityRef<T_ADRESSE> _T_ADRESSE;
		
		private EntityRef<T_MEDECIN> _T_MEDECIN;
		
		private EntityRef<T_PATIENT> _T_PATIENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIdentifiantChanging(string value);
    partial void OnIdentifiantChanged();
    partial void OnMotDePassChanging(string value);
    partial void OnMotDePassChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnDateCreationChanging(string value);
    partial void OnDateCreationChanged();
    partial void OnDerniereModifChanging(string value);
    partial void OnDerniereModifChanged();
    partial void OnCreeParChanging(System.Nullable<int> value);
    partial void OnCreeParChanged();
    partial void OnAdressMailChanging(string value);
    partial void OnAdressMailChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    #endregion
		
		public T_COMPTE()
		{
			this._T_ADRESSE = default(EntityRef<T_ADRESSE>);
			this._T_MEDECIN = default(EntityRef<T_MEDECIN>);
			this._T_PATIENT = default(EntityRef<T_PATIENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (((this._T_ADRESSE.HasLoadedOrAssignedValue || this._T_MEDECIN.HasLoadedOrAssignedValue) 
								|| this._T_PATIENT.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identifiant", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Identifiant
		{
			get
			{
				return this._Identifiant;
			}
			set
			{
				if ((this._Identifiant != value))
				{
					this.OnIdentifiantChanging(value);
					this.SendPropertyChanging();
					this._Identifiant = value;
					this.SendPropertyChanged("Identifiant");
					this.OnIdentifiantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotDePass", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MotDePass
		{
			get
			{
				return this._MotDePass;
			}
			set
			{
				if ((this._MotDePass != value))
				{
					this.OnMotDePassChanging(value);
					this.SendPropertyChanging();
					this._MotDePass = value;
					this.SendPropertyChanged("MotDePass");
					this.OnMotDePassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreation", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DateCreation
		{
			get
			{
				return this._DateCreation;
			}
			set
			{
				if ((this._DateCreation != value))
				{
					this.OnDateCreationChanging(value);
					this.SendPropertyChanging();
					this._DateCreation = value;
					this.SendPropertyChanged("DateCreation");
					this.OnDateCreationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DerniereModif", DbType="VarChar(MAX)")]
		public string DerniereModif
		{
			get
			{
				return this._DerniereModif;
			}
			set
			{
				if ((this._DerniereModif != value))
				{
					this.OnDerniereModifChanging(value);
					this.SendPropertyChanging();
					this._DerniereModif = value;
					this.SendPropertyChanged("DerniereModif");
					this.OnDerniereModifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreePar", DbType="Int")]
		public System.Nullable<int> CreePar
		{
			get
			{
				return this._CreePar;
			}
			set
			{
				if ((this._CreePar != value))
				{
					this.OnCreeParChanging(value);
					this.SendPropertyChanging();
					this._CreePar = value;
					this.SendPropertyChanged("CreePar");
					this.OnCreeParChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdressMail", DbType="VarChar(MAX)")]
		public string AdressMail
		{
			get
			{
				return this._AdressMail;
			}
			set
			{
				if ((this._AdressMail != value))
				{
					this.OnAdressMailChanging(value);
					this.SendPropertyChanging();
					this._AdressMail = value;
					this.SendPropertyChanged("AdressMail");
					this.OnAdressMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="VarChar(MAX)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_ADRESSE_T_COMPTE", Storage="_T_ADRESSE", ThisKey="ID", OtherKey="IdCompte", IsForeignKey=true)]
		public T_ADRESSE T_ADRESSE
		{
			get
			{
				return this._T_ADRESSE.Entity;
			}
			set
			{
				T_ADRESSE previousValue = this._T_ADRESSE.Entity;
				if (((previousValue != value) 
							|| (this._T_ADRESSE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_ADRESSE.Entity = null;
						previousValue.T_COMPTE.Remove(this);
					}
					this._T_ADRESSE.Entity = value;
					if ((value != null))
					{
						value.T_COMPTE.Add(this);
						this._ID = value.IdCompte;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("T_ADRESSE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_MEDECIN_T_COMPTE", Storage="_T_MEDECIN", ThisKey="ID", OtherKey="IdCompte", IsForeignKey=true)]
		public T_MEDECIN T_MEDECIN
		{
			get
			{
				return this._T_MEDECIN.Entity;
			}
			set
			{
				T_MEDECIN previousValue = this._T_MEDECIN.Entity;
				if (((previousValue != value) 
							|| (this._T_MEDECIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_MEDECIN.Entity = null;
						previousValue.T_COMPTE.Remove(this);
					}
					this._T_MEDECIN.Entity = value;
					if ((value != null))
					{
						value.T_COMPTE.Add(this);
						this._ID = value.IdCompte;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("T_MEDECIN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PATIENT_T_COMPTE", Storage="_T_PATIENT", ThisKey="ID", OtherKey="IdCompte", IsForeignKey=true)]
		public T_PATIENT T_PATIENT
		{
			get
			{
				return this._T_PATIENT.Entity;
			}
			set
			{
				T_PATIENT previousValue = this._T_PATIENT.Entity;
				if (((previousValue != value) 
							|| (this._T_PATIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_PATIENT.Entity = null;
						previousValue.T_COMPTE.Remove(this);
					}
					this._T_PATIENT.Entity = value;
					if ((value != null))
					{
						value.T_COMPTE.Add(this);
						this._ID = value.IdCompte;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("T_PATIENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_HORAIRE")]
	public partial class T_HORAIRE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDMedecin;
		
		private int _IDPlageHoraire;
		
		private int _IDJour;
		
		private EntitySet<T_MEDECIN> _T_MEDECIN;
		
		private EntityRef<T_PLAGEHORAIRE> _T_PLAGEHORAIRE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDMedecinChanging(int value);
    partial void OnIDMedecinChanged();
    partial void OnIDPlageHoraireChanging(int value);
    partial void OnIDPlageHoraireChanged();
    partial void OnIDJourChanging(int value);
    partial void OnIDJourChanged();
    #endregion
		
		public T_HORAIRE()
		{
			this._T_MEDECIN = new EntitySet<T_MEDECIN>(new Action<T_MEDECIN>(this.attach_T_MEDECIN), new Action<T_MEDECIN>(this.detach_T_MEDECIN));
			this._T_PLAGEHORAIRE = default(EntityRef<T_PLAGEHORAIRE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMedecin", DbType="Int NOT NULL")]
		public int IDMedecin
		{
			get
			{
				return this._IDMedecin;
			}
			set
			{
				if ((this._IDMedecin != value))
				{
					this.OnIDMedecinChanging(value);
					this.SendPropertyChanging();
					this._IDMedecin = value;
					this.SendPropertyChanged("IDMedecin");
					this.OnIDMedecinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPlageHoraire", DbType="Int NOT NULL")]
		public int IDPlageHoraire
		{
			get
			{
				return this._IDPlageHoraire;
			}
			set
			{
				if ((this._IDPlageHoraire != value))
				{
					if (this._T_PLAGEHORAIRE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPlageHoraireChanging(value);
					this.SendPropertyChanging();
					this._IDPlageHoraire = value;
					this.SendPropertyChanged("IDPlageHoraire");
					this.OnIDPlageHoraireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDJour", DbType="Int NOT NULL")]
		public int IDJour
		{
			get
			{
				return this._IDJour;
			}
			set
			{
				if ((this._IDJour != value))
				{
					this.OnIDJourChanging(value);
					this.SendPropertyChanging();
					this._IDJour = value;
					this.SendPropertyChanged("IDJour");
					this.OnIDJourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_HORAIRE_T_MEDECIN", Storage="_T_MEDECIN", ThisKey="IDMedecin", OtherKey="ID")]
		public EntitySet<T_MEDECIN> T_MEDECIN
		{
			get
			{
				return this._T_MEDECIN;
			}
			set
			{
				this._T_MEDECIN.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PLAGEHORAIRE_T_HORAIRE", Storage="_T_PLAGEHORAIRE", ThisKey="IDPlageHoraire", OtherKey="ID", IsForeignKey=true)]
		public T_PLAGEHORAIRE T_PLAGEHORAIRE
		{
			get
			{
				return this._T_PLAGEHORAIRE.Entity;
			}
			set
			{
				T_PLAGEHORAIRE previousValue = this._T_PLAGEHORAIRE.Entity;
				if (((previousValue != value) 
							|| (this._T_PLAGEHORAIRE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_PLAGEHORAIRE.Entity = null;
						previousValue.T_HORAIRE.Remove(this);
					}
					this._T_PLAGEHORAIRE.Entity = value;
					if ((value != null))
					{
						value.T_HORAIRE.Add(this);
						this._IDPlageHoraire = value.ID;
					}
					else
					{
						this._IDPlageHoraire = default(int);
					}
					this.SendPropertyChanged("T_PLAGEHORAIRE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_MEDECIN(T_MEDECIN entity)
		{
			this.SendPropertyChanging();
			entity.T_HORAIRE = this;
		}
		
		private void detach_T_MEDECIN(T_MEDECIN entity)
		{
			this.SendPropertyChanging();
			entity.T_HORAIRE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_PLAGEHORAIRE")]
	public partial class T_PLAGEHORAIRE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _HeureDebut;
		
		private string _HeureFin;
		
		private EntitySet<T_HORAIRE> _T_HORAIRE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHeureDebutChanging(string value);
    partial void OnHeureDebutChanged();
    partial void OnHeureFinChanging(string value);
    partial void OnHeureFinChanged();
    #endregion
		
		public T_PLAGEHORAIRE()
		{
			this._T_HORAIRE = new EntitySet<T_HORAIRE>(new Action<T_HORAIRE>(this.attach_T_HORAIRE), new Action<T_HORAIRE>(this.detach_T_HORAIRE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeureDebut", DbType="NVarChar(MAX)")]
		public string HeureDebut
		{
			get
			{
				return this._HeureDebut;
			}
			set
			{
				if ((this._HeureDebut != value))
				{
					this.OnHeureDebutChanging(value);
					this.SendPropertyChanging();
					this._HeureDebut = value;
					this.SendPropertyChanged("HeureDebut");
					this.OnHeureDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeureFin", DbType="NVarChar(MAX)")]
		public string HeureFin
		{
			get
			{
				return this._HeureFin;
			}
			set
			{
				if ((this._HeureFin != value))
				{
					this.OnHeureFinChanging(value);
					this.SendPropertyChanging();
					this._HeureFin = value;
					this.SendPropertyChanged("HeureFin");
					this.OnHeureFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PLAGEHORAIRE_T_HORAIRE", Storage="_T_HORAIRE", ThisKey="ID", OtherKey="IDPlageHoraire")]
		public EntitySet<T_HORAIRE> T_HORAIRE
		{
			get
			{
				return this._T_HORAIRE;
			}
			set
			{
				this._T_HORAIRE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_HORAIRE(T_HORAIRE entity)
		{
			this.SendPropertyChanging();
			entity.T_PLAGEHORAIRE = this;
		}
		
		private void detach_T_HORAIRE(T_HORAIRE entity)
		{
			this.SendPropertyChanging();
			entity.T_PLAGEHORAIRE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_ORDONNANCE")]
	public partial class T_ORDONNANCE
	{
		
		private int _idPatient;
		
		private int _idMedicament;
		
		private System.Nullable<int> _Quantité;
		
		public T_ORDONNANCE()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPatient", DbType="Int NOT NULL")]
		public int idPatient
		{
			get
			{
				return this._idPatient;
			}
			set
			{
				if ((this._idPatient != value))
				{
					this._idPatient = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMedicament", DbType="Int NOT NULL")]
		public int idMedicament
		{
			get
			{
				return this._idMedicament;
			}
			set
			{
				if ((this._idMedicament != value))
				{
					this._idMedicament = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantité", DbType="Int")]
		public System.Nullable<int> Quantité
		{
			get
			{
				return this._Quantité;
			}
			set
			{
				if ((this._Quantité != value))
				{
					this._Quantité = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_MEDICAMENT")]
	public partial class T_MEDICAMENT
	{
		
		private int _ID;
		
		private System.Nullable<int> _CodeCIS;
		
		private string _Denominationmedicament;
		
		private string _Formepharmaceutique;
		
		private string _Voiesadministration;
		
		private string _Statutadministratif;
		
		private string _Typedeprocedureautorisation;
		
		private string _Etatcommercialisation;
		
		private System.Nullable<System.DateTime> _DateAMM;
		
		private string _StatutBdm;
		
		private string _Numeroautorisationeuropeenne;
		
		private string _Titulaire;
		
		private string _Surveillancerenforcee;
		
		public T_MEDICAMENT()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeCIS", DbType="Int")]
		public System.Nullable<int> CodeCIS
		{
			get
			{
				return this._CodeCIS;
			}
			set
			{
				if ((this._CodeCIS != value))
				{
					this._CodeCIS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denominationmedicament", DbType="VarChar(MAX)")]
		public string Denominationmedicament
		{
			get
			{
				return this._Denominationmedicament;
			}
			set
			{
				if ((this._Denominationmedicament != value))
				{
					this._Denominationmedicament = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Formepharmaceutique", DbType="VarChar(MAX)")]
		public string Formepharmaceutique
		{
			get
			{
				return this._Formepharmaceutique;
			}
			set
			{
				if ((this._Formepharmaceutique != value))
				{
					this._Formepharmaceutique = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voiesadministration", DbType="VarChar(MAX)")]
		public string Voiesadministration
		{
			get
			{
				return this._Voiesadministration;
			}
			set
			{
				if ((this._Voiesadministration != value))
				{
					this._Voiesadministration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statutadministratif", DbType="VarChar(MAX)")]
		public string Statutadministratif
		{
			get
			{
				return this._Statutadministratif;
			}
			set
			{
				if ((this._Statutadministratif != value))
				{
					this._Statutadministratif = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Typedeprocedureautorisation", DbType="VarChar(MAX)")]
		public string Typedeprocedureautorisation
		{
			get
			{
				return this._Typedeprocedureautorisation;
			}
			set
			{
				if ((this._Typedeprocedureautorisation != value))
				{
					this._Typedeprocedureautorisation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Etatcommercialisation", DbType="VarChar(MAX)")]
		public string Etatcommercialisation
		{
			get
			{
				return this._Etatcommercialisation;
			}
			set
			{
				if ((this._Etatcommercialisation != value))
				{
					this._Etatcommercialisation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAMM", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAMM
		{
			get
			{
				return this._DateAMM;
			}
			set
			{
				if ((this._DateAMM != value))
				{
					this._DateAMM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutBdm", DbType="VarChar(MAX)")]
		public string StatutBdm
		{
			get
			{
				return this._StatutBdm;
			}
			set
			{
				if ((this._StatutBdm != value))
				{
					this._StatutBdm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numeroautorisationeuropeenne", DbType="VarChar(MAX)")]
		public string Numeroautorisationeuropeenne
		{
			get
			{
				return this._Numeroautorisationeuropeenne;
			}
			set
			{
				if ((this._Numeroautorisationeuropeenne != value))
				{
					this._Numeroautorisationeuropeenne = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulaire", DbType="VarChar(MAX)")]
		public string Titulaire
		{
			get
			{
				return this._Titulaire;
			}
			set
			{
				if ((this._Titulaire != value))
				{
					this._Titulaire = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surveillancerenforcee", DbType="VarChar(MAX)")]
		public string Surveillancerenforcee
		{
			get
			{
				return this._Surveillancerenforcee;
			}
			set
			{
				if ((this._Surveillancerenforcee != value))
				{
					this._Surveillancerenforcee = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_MEDECINPATIENT")]
	public partial class T_MEDECINPATIENT
	{
		
		private int _IDMedecin;
		
		private int _IDPatient;
		
		public T_MEDECINPATIENT()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMedecin", DbType="Int NOT NULL")]
		public int IDMedecin
		{
			get
			{
				return this._IDMedecin;
			}
			set
			{
				if ((this._IDMedecin != value))
				{
					this._IDMedecin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPatient", DbType="Int NOT NULL")]
		public int IDPatient
		{
			get
			{
				return this._IDPatient;
			}
			set
			{
				if ((this._IDPatient != value))
				{
					this._IDPatient = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_PATIENT")]
	public partial class T_PATIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DateNaissance;
		
		private int _IdCompte;
		
		private string _TelephonePortable;
		
		private string _TelephoneFixe;
		
		private bool _Sexe;
		
		private EntitySet<T_COMPTE> _T_COMPTE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateNaissanceChanging(string value);
    partial void OnDateNaissanceChanged();
    partial void OnIdCompteChanging(int value);
    partial void OnIdCompteChanged();
    partial void OnTelephonePortableChanging(string value);
    partial void OnTelephonePortableChanged();
    partial void OnTelephoneFixeChanging(string value);
    partial void OnTelephoneFixeChanged();
    partial void OnSexeChanging(bool value);
    partial void OnSexeChanged();
    #endregion
		
		public T_PATIENT()
		{
			this._T_COMPTE = new EntitySet<T_COMPTE>(new Action<T_COMPTE>(this.attach_T_COMPTE), new Action<T_COMPTE>(this.detach_T_COMPTE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateNaissance", DbType="NVarChar(MAX)")]
		public string DateNaissance
		{
			get
			{
				return this._DateNaissance;
			}
			set
			{
				if ((this._DateNaissance != value))
				{
					this.OnDateNaissanceChanging(value);
					this.SendPropertyChanging();
					this._DateNaissance = value;
					this.SendPropertyChanged("DateNaissance");
					this.OnDateNaissanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCompte", DbType="Int NOT NULL")]
		public int IdCompte
		{
			get
			{
				return this._IdCompte;
			}
			set
			{
				if ((this._IdCompte != value))
				{
					this.OnIdCompteChanging(value);
					this.SendPropertyChanging();
					this._IdCompte = value;
					this.SendPropertyChanged("IdCompte");
					this.OnIdCompteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephonePortable", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TelephonePortable
		{
			get
			{
				return this._TelephonePortable;
			}
			set
			{
				if ((this._TelephonePortable != value))
				{
					this.OnTelephonePortableChanging(value);
					this.SendPropertyChanging();
					this._TelephonePortable = value;
					this.SendPropertyChanged("TelephonePortable");
					this.OnTelephonePortableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneFixe", DbType="VarChar(MAX)")]
		public string TelephoneFixe
		{
			get
			{
				return this._TelephoneFixe;
			}
			set
			{
				if ((this._TelephoneFixe != value))
				{
					this.OnTelephoneFixeChanging(value);
					this.SendPropertyChanging();
					this._TelephoneFixe = value;
					this.SendPropertyChanged("TelephoneFixe");
					this.OnTelephoneFixeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexe", DbType="Bit NOT NULL")]
		public bool Sexe
		{
			get
			{
				return this._Sexe;
			}
			set
			{
				if ((this._Sexe != value))
				{
					this.OnSexeChanging(value);
					this.SendPropertyChanging();
					this._Sexe = value;
					this.SendPropertyChanged("Sexe");
					this.OnSexeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PATIENT_T_COMPTE", Storage="_T_COMPTE", ThisKey="IdCompte", OtherKey="ID")]
		public EntitySet<T_COMPTE> T_COMPTE
		{
			get
			{
				return this._T_COMPTE;
			}
			set
			{
				this._T_COMPTE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_COMPTE(T_COMPTE entity)
		{
			this.SendPropertyChanging();
			entity.T_PATIENT = this;
		}
		
		private void detach_T_COMPTE(T_COMPTE entity)
		{
			this.SendPropertyChanging();
			entity.T_PATIENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_MEDICAMENTS_MIGRAINE")]
	public partial class T_MEDICAMENTS_MIGRAINE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDMigraine;
		
		private int _IDMedicament;
		
		private System.Nullable<int> _Quantité;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDMigraineChanging(int value);
    partial void OnIDMigraineChanged();
    partial void OnIDMedicamentChanging(int value);
    partial void OnIDMedicamentChanged();
    partial void OnQuantitéChanging(System.Nullable<int> value);
    partial void OnQuantitéChanged();
    #endregion
		
		public T_MEDICAMENTS_MIGRAINE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMigraine", DbType="Int NOT NULL")]
		public int IDMigraine
		{
			get
			{
				return this._IDMigraine;
			}
			set
			{
				if ((this._IDMigraine != value))
				{
					this.OnIDMigraineChanging(value);
					this.SendPropertyChanging();
					this._IDMigraine = value;
					this.SendPropertyChanged("IDMigraine");
					this.OnIDMigraineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMedicament", DbType="Int NOT NULL")]
		public int IDMedicament
		{
			get
			{
				return this._IDMedicament;
			}
			set
			{
				if ((this._IDMedicament != value))
				{
					this.OnIDMedicamentChanging(value);
					this.SendPropertyChanging();
					this._IDMedicament = value;
					this.SendPropertyChanged("IDMedicament");
					this.OnIDMedicamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantité", DbType="Int")]
		public System.Nullable<int> Quantité
		{
			get
			{
				return this._Quantité;
			}
			set
			{
				if ((this._Quantité != value))
				{
					this.OnQuantitéChanging(value);
					this.SendPropertyChanging();
					this._Quantité = value;
					this.SendPropertyChanged("Quantité");
					this.OnQuantitéChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_FACTEURS_MIGRAINE")]
	public partial class T_FACTEURS_MIGRAINE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDMigraine;
		
		private int _IDFacteur;
		
		private System.Nullable<int> _Quantité;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDMigraineChanging(int value);
    partial void OnIDMigraineChanged();
    partial void OnIDFacteurChanging(int value);
    partial void OnIDFacteurChanged();
    partial void OnQuantitéChanging(System.Nullable<int> value);
    partial void OnQuantitéChanged();
    #endregion
		
		public T_FACTEURS_MIGRAINE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMigraine", DbType="Int NOT NULL")]
		public int IDMigraine
		{
			get
			{
				return this._IDMigraine;
			}
			set
			{
				if ((this._IDMigraine != value))
				{
					this.OnIDMigraineChanging(value);
					this.SendPropertyChanging();
					this._IDMigraine = value;
					this.SendPropertyChanged("IDMigraine");
					this.OnIDMigraineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFacteur", DbType="Int NOT NULL")]
		public int IDFacteur
		{
			get
			{
				return this._IDFacteur;
			}
			set
			{
				if ((this._IDFacteur != value))
				{
					this.OnIDFacteurChanging(value);
					this.SendPropertyChanging();
					this._IDFacteur = value;
					this.SendPropertyChanged("IDFacteur");
					this.OnIDFacteurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantité", DbType="Int")]
		public System.Nullable<int> Quantité
		{
			get
			{
				return this._Quantité;
			}
			set
			{
				if ((this._Quantité != value))
				{
					this.OnQuantitéChanging(value);
					this.SendPropertyChanging();
					this._Quantité = value;
					this.SendPropertyChanged("Quantité");
					this.OnQuantitéChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_MIGRAINES_PATIENT")]
	public partial class T_MIGRAINES_PATIENT
	{
		
		private int _IDPatient;
		
		private int _IDMigraine;
		
		public T_MIGRAINES_PATIENT()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPatient", DbType="Int NOT NULL")]
		public int IDPatient
		{
			get
			{
				return this._IDPatient;
			}
			set
			{
				if ((this._IDPatient != value))
				{
					this._IDPatient = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMigraine", DbType="Int NOT NULL")]
		public int IDMigraine
		{
			get
			{
				return this._IDMigraine;
			}
			set
			{
				if ((this._IDMigraine != value))
				{
					this._IDMigraine = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_MIGRAINE")]
	public partial class T_MIGRAINE
	{
		
		private int _ID;
		
		private System.Nullable<int> _Intensite;
		
		private string _Debut;
		
		private string _Fin;
		
		private System.Nullable<int> _IDFacteursMigraine;
		
		private System.Nullable<int> _IDMedicamentsMigraine;
		
		public T_MIGRAINE()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intensite", DbType="Int")]
		public System.Nullable<int> Intensite
		{
			get
			{
				return this._Intensite;
			}
			set
			{
				if ((this._Intensite != value))
				{
					this._Intensite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debut", DbType="VarChar(MAX)")]
		public string Debut
		{
			get
			{
				return this._Debut;
			}
			set
			{
				if ((this._Debut != value))
				{
					this._Debut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fin", DbType="VarChar(MAX)")]
		public string Fin
		{
			get
			{
				return this._Fin;
			}
			set
			{
				if ((this._Fin != value))
				{
					this._Fin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFacteursMigraine", DbType="Int")]
		public System.Nullable<int> IDFacteursMigraine
		{
			get
			{
				return this._IDFacteursMigraine;
			}
			set
			{
				if ((this._IDFacteursMigraine != value))
				{
					this._IDFacteursMigraine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMedicamentsMigraine", DbType="Int")]
		public System.Nullable<int> IDMedicamentsMigraine
		{
			get
			{
				return this._IDMedicamentsMigraine;
			}
			set
			{
				if ((this._IDMedicamentsMigraine != value))
				{
					this._IDMedicamentsMigraine = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_FACTEURS")]
	public partial class T_FACTEURS
	{
		
		private int _IDPatient;
		
		private int _IDFacteur;
		
		public T_FACTEURS()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPatient", DbType="Int NOT NULL")]
		public int IDPatient
		{
			get
			{
				return this._IDPatient;
			}
			set
			{
				if ((this._IDPatient != value))
				{
					this._IDPatient = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFacteur", DbType="Int NOT NULL")]
		public int IDFacteur
		{
			get
			{
				return this._IDFacteur;
			}
			set
			{
				if ((this._IDFacteur != value))
				{
					this._IDFacteur = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_FACTEUR")]
	public partial class T_FACTEUR
	{
		
		private int _ID;
		
		private bool _TypeFacteur;
		
		private string _Nom;
		
		private string _Question;
		
		public T_FACTEUR()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeFacteur", DbType="Bit NOT NULL")]
		public bool TypeFacteur
		{
			get
			{
				return this._TypeFacteur;
			}
			set
			{
				if ((this._TypeFacteur != value))
				{
					this._TypeFacteur = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this._Nom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="VarChar(MAX)")]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this._Question = value;
				}
			}
		}
	}
	
	public partial class ListPatientResult
	{
		
		private int _ID;
		
		private string _Identifiant;
		
		private string _MotDePass;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _DateCreation;
		
		private string _DerniereModif;
		
		private System.Nullable<int> _CreePar;
		
		private string _Token;
		
		public ListPatientResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identifiant", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Identifiant
		{
			get
			{
				return this._Identifiant;
			}
			set
			{
				if ((this._Identifiant != value))
				{
					this._Identifiant = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotDePass", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MotDePass
		{
			get
			{
				return this._MotDePass;
			}
			set
			{
				if ((this._MotDePass != value))
				{
					this._MotDePass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this._Nom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this._Prenom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreation", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DateCreation
		{
			get
			{
				return this._DateCreation;
			}
			set
			{
				if ((this._DateCreation != value))
				{
					this._DateCreation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DerniereModif", DbType="VarChar(MAX)")]
		public string DerniereModif
		{
			get
			{
				return this._DerniereModif;
			}
			set
			{
				if ((this._DerniereModif != value))
				{
					this._DerniereModif = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreePar", DbType="Int")]
		public System.Nullable<int> CreePar
		{
			get
			{
				return this._CreePar;
			}
			set
			{
				if ((this._CreePar != value))
				{
					this._CreePar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="VarChar(MAX)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this._Token = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
